name: IAR building

on:
  #push:
  #  branches:
  #    - "**" # Match all branches
  #pull_request:
  #  branches:
  #    - "**" # Match all target branches of pull requests
  workflow_dispatch:

# Set a new GitHub Actions Secret named IAR_LMS_BEARER_TOKEN
# for your repository. The secret is then propagated to an
# Environment variable used for all jobs within this workflow
env:
  IAR_LMS_BEARER_TOKEN: ${{ secrets.IAR_LMS_BEARER_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/iarsystems/arm:9.60.4-st

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build all IAR projects
        shell: bash
        run: |
          REPO_ROOT="$GITHUB_WORKSPACE"
          chmod +x "$GITHUB_WORKSPACE/.github/workflows/vcpkg_blacklist_check.sh"

          mapfile -t solutions < <(find ./SampleCode -type f -name *.ewp -exec dirname {} \;)
          declare -a failed_logs=()

          set +e
          for sol_path in "${solutions[@]}"; do

            dir=$(dirname "$sol_path")
            sol_name=$(basename "$dir")
            log_path="$dir/$sol_name.txt"

            #echo "🔨 Building $dir on $RUNNER_OS"
            iarbuild $sol_path -build * -log warnings > "$log_path" 2>&1
            ret1=$?

            # Check log file
            $REPO_ROOT/.github/workflows/vcpkg_blacklist_check.sh $log_path
            ret2=$?

            if [[ $ret1 -ne 0 || $ret2 -ne 0 ]]; then
              echo "❌ Build failed: $sol_path"
              echo "🔍 Log:"
              cat "$log_path"
              failed_logs+=("$log_path")   #add log into the set.
            else
              echo "✅ Build success: $sol_path"
            fi
          done
          set -e

          # List all the paths of failed logs at the end (if any)
          if [[ ${#failed_logs[@]} -ne 0 ]]; then
            echo "🚨 The following builds failed:"
            for log in "${failed_logs[@]}"; do
              echo "  - $log"
            done
            printf "%s," "${failed_logs[@]}" | sed 's/,$//' > failed_logs.txt
            echo "Wrote failed_logs.txt"
            exit 1
          else
            echo "🎉 All builds succeeded!"
          fi

      - name: Prepare failed logs for email
        id: prepare_logs
        shell: bash
        if: failure() # only runs if previous step failed
        run: |
          logs=$(cat failed_logs.txt)
          echo "logs=$logs" >> "$GITHUB_OUTPUT"

      - name: Send mail
        if: failure()
        uses: dawidd6/action-send-mail@v5
        with:
          connection_url: ${{ secrets.MAIL_CONNECTION }}
          subject: ${{ github.repository }} [${{ github.ref_name }}] Job ${{ job.status }}
          to: wclin@nuvoton.com
          #to: ${{ secrets.MAIL_TO }}
          #cc: ${{ secrets.MAIL_CC }}
          from: Github Action Workflow <wosayttn@gmail.com>
          attachments: ${{ steps.prepare_logs.outputs.logs }}
          body: |
            Hello,

            The build has completed. Please find the attached log file for details.
            Failure: ${{ steps.prepare_logs.outputs.logs }}

            Best regards,
            NuMicro Actions
